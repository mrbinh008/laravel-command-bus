services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    ports:
      - ${REVERB_PORT:-8084}:${REVERB_PORT:-8084} # for reverb
    volumes:
      - ./:/var/www
      - ./docker/php/supervisord.d/queue-worker.conf:/etc/supervisor/conf.d/queue-worker.conf
      - ./docker/php/supervisord.d/schedule.conf:/etc/supervisor/conf.d/schedule.conf
      - ./docker/php/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    working_dir: /var/www/src
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-shops_ecommerce}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-shops_ecommerce}
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./docker/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  nginx:
    image: nginx:alpine
    ports:
      - '${APP_PORT:-18093}:80'
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - app-network

  redis:
    image: redis:alpine
    volumes:
      - redis-store:/data
    ports:
      - '${REDIS_PORT:-6380}:6379'
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "${MAIL_PORT:-8025}:8025"
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
    volumes:
      - ./mailhog/maildir:/maildir
    command: [ "-storage=maildir", "-maildir-path=/maildir" ]
    networks:
      - app-network

volumes:
  db-store:
  redis-store:

networks:
  app-network:
    driver: bridge
